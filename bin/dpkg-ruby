#!/usr/bin/ruby
#
# dpkg-ruby - ruby script to parse status,available and Packages,Sources
#             dpkg-awk clone
# Copyright (c) 2001 Fumitoshi UKAI <ukai@debian.or.jp>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# $Id: dpkg-ruby,v 1.6 2001/04/20 19:07:00 ukai Exp $
#

require 'debian'
require 'getoptlong'

filename = Debian::Dpkg::STATUS_FILE
$debug = 0
sortfield = []
numfield = []
$rec_sep = ''

def usage
  $stderr.puts "#{$PROGRAM_NAME} [opts] 'field:regexp' .. -- 'output_field' .."
  $stderr.puts ' opts: [-f file] [-d nn] [-s sf] [-n nf] [-rs rs]'
end

opts = GetoptLong.new(
  ['--file', '-f', GetoptLong::REQUIRED_ARGUMENT],
  ['--debug', '-d', GetoptLong::OPTIONAL_ARGUMENT],
  ['--sort', '-s',  GetoptLong::REQUIRED_ARGUMENT],
  ['--numeric_field', '-n', GetoptLong::REQUIRED_ARGUMENT],
  ['--rec_sep', '--rs', GetoptLong::REQUIRED_ARGUMENT],
  ['--help', '-h', GetoptLong::NO_ARGUMENT]
)
opts.ordering = GetoptLong::REQUIRE_ORDER

begin
  opts.each do |opt, arg|
    case opt
    when '--file' then filename = arg
    when '--debug' then
      if arg
        $debug = arg
      else
        $debug += 1
      end
    when '--sort' then
      sortfield += arg.split(' ').collect { |a| a.split(',') }
      sortfield.flatten!
    when '--numeric_field' then
      numfield += arg.split(' ').collect { |a| a.split(',') }
      numfield.flatten!
    when '--rec_sep' then
      $rec_sep = arg
    when '--help' then
      usage; exit 0
    else
      opts.terminate
    end
  end
rescue GetoptLong::InvalidOption
  usage; exit 1
end

field = {}
$outputfield = []
while arg = ARGV.shift
  break if arg == '--'
  unless /^([^:]+):(.*)/ =~ arg
    $stderr.puts "E: invalid argument #{arg}"
    exit 1
  end
  field[Regexp.last_match(1)] = Regexp.new(Regexp.last_match(2))
end
$outputfield = ARGV

da = Debian::Archives.load(filename)

def output(deb)
  if $outputfield.empty?
    deb.fields do |f|
      puts "#{f.capitalize}: #{deb[f]}"
    end
    puts $rec_sep
  elsif $outputfield[0] == '^'
    deb.fields do |f|
      unless $outputfield.find { |of| of.capitalize == f.capitalize }
        puts "#{f.capitalize}: #{deb[f]}"
      end
    end
    puts $rec_sep
  else
    $outputfield.each do |f|
      puts "#{f.capitalize}: #{deb[f]}"
    end
    puts $rec_sep if $rec_sep != '' || $outputfield.length > 1
  end
end

mp = []
da.each_package do |d|
  match = true
  field.each do |f, re|
    unless re =~ d[f]
      match = false
      break
    end
  end
  next unless match
  if sortfield.empty?
    output(d)
  else
    mp.push(d)
  end
end

unless sortfield.empty?
  mp.sort do |a, b|
    d = 0
    sortfield.each do |sf|
      d = if numfield.include?(sf)
            a[sf].to_i <=> b[sf].to_i
          else
            a[sf] <=> b[sf]
          end
      break if d != 0
    end
    d
  end.each do |d|
    output(d)
  end
end
